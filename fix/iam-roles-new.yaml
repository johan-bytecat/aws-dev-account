AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Development Environment IAM Roles and Policies - New Stack with Different Names'

Parameters:
  FoundationStackName:
    Type: String
    Description: 'Name of the foundation stack to import values from'
    Default: 'devcloud-foundation'
    
  PrivateHostedZoneId:
    Type: String
    Description: 'ID of the existing private hosted zone (managed by separate team)'
    Default: ''

Conditions:
  CreatePrivateHostedZone: !Equals [!Ref PrivateHostedZoneId, '']

Resources:
  # =============================================================================
  # IAM ROLES AND POLICIES - Identity and access management
  # =============================================================================

  # IAM role for VPN/NAT instance - allows S3 access and DNS management for both zones
  VPNNATRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: DevCloud-VPN-NAT-Role-v2
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: DevCloud-Scripts-Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub 
                    - 'arn:aws:s3:::${ScriptsBucketName}/*'
                    - ScriptsBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Scripts-Bucket-Name'
                  - !Sub 
                    - 'arn:aws:s3:::${ScriptsBucketName}'
                    - ScriptsBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Scripts-Bucket-Name'
        - PolicyName: DevCloud-Route53-Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                Resource: 
                  - !Sub 
                    - 'arn:aws:route53:::hostedzone/${PrivateZoneId}'
                    - PrivateZoneId: !If 
                        - CreatePrivateHostedZone
                        - !ImportValue 
                            'Fn::Sub': '${FoundationStackName}-Private-Hosted-Zone-ID'
                        - !Ref PrivateHostedZoneId
                  - !Sub 
                    - 'arn:aws:route53:::hostedzone/${PublicHostedZoneId}'
                    - PublicHostedZoneId: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Public-Hosted-Zone-ID'
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: '*'

  # IAM role for private instances - allows S3 access and private DNS management only
  PrivateInstanceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: DevCloud-Private-Instance-Role-v2
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: DevCloud-Full-S3-Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub 
                    - 'arn:aws:s3:::${ScriptsBucketName}/*'
                    - ScriptsBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Scripts-Bucket-Name'
                  - !Sub 
                    - 'arn:aws:s3:::${ScriptsBucketName}'
                    - ScriptsBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Scripts-Bucket-Name'
                  - !Sub 
                    - 'arn:aws:s3:::${DataBucketName}/*'
                    - DataBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Data-Bucket-Name'
                  - !Sub 
                    - 'arn:aws:s3:::${DataBucketName}'
                    - DataBucketName: !ImportValue 
                        'Fn::Sub': '${FoundationStackName}-Data-Bucket-Name'
        - PolicyName: DevCloud-Route53-Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                Resource: !Sub 
                  - 'arn:aws:route53:::hostedzone/${PrivateZoneId}'
                  - PrivateZoneId: !If 
                      - CreatePrivateHostedZone
                      - !ImportValue 
                          'Fn::Sub': '${FoundationStackName}-Private-Hosted-Zone-ID'
                      - !Ref PrivateHostedZoneId
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: '*'

  # Instance profile for VPN/NAT - allows EC2 to assume VPN/NAT role
  VPNNATInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Retain
    Properties:
      InstanceProfileName: DevCloud-VPN-NAT-Role-v2
      Roles:
        - !Ref VPNNATRole

  # Instance profile for private instances - allows EC2 to assume private instance role
  PrivateInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Retain
    Properties:
      InstanceProfileName: DevCloud-Private-Instance-Role-v2
      Roles:
        - !Ref PrivateInstanceRole

  # IAM role for instance management operations (start/stop instances)
  InstanceManagementRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: DevCloud-Instance-Management-Role-v2
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                'aws:RequestedRegion': 'af-south-1'

Outputs:
  VPNNATInstanceProfileArn:
    Description: VPN/NAT Instance Profile ARN
    Value: !GetAtt VPNNATInstanceProfile.Arn
    Export:
      Name: !Sub '${AWS::StackName}-VPN-NAT-Instance-Profile-ARN'

  VPNNATInstanceProfileName:
    Description: VPN/NAT Instance Profile Name
    Value: !Ref VPNNATInstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-VPN-NAT-Instance-Profile-Name'

  PrivateInstanceProfileArn:
    Description: Private Instance Profile ARN
    Value: !GetAtt PrivateInstanceProfile.Arn
    Export:
      Name: !Sub '${AWS::StackName}-Private-Instance-Profile-ARN'

  PrivateInstanceProfileName:
    Description: Private Instance Profile Name
    Value: !Ref PrivateInstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-Private-Instance-Profile-Name'

  InstanceManagementRoleArn:
    Description: IAM Role ARN for instance management
    Value: !GetAtt InstanceManagementRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-Instance-Management-Role-ARN'

  VPNNATRoleArn:
    Description: VPN/NAT Role ARN
    Value: !GetAtt VPNNATRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-VPN-NAT-Role-ARN'

  PrivateInstanceRoleArn:
    Description: Private Instance Role ARN
    Value: !GetAtt PrivateInstanceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-Private-Instance-Role-ARN'
